generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @default("SIN NOMBRE")
  email     String   @unique
  birthdate DateTime?
  phone     String?
  address   String?
  city      String?
  department    String?
  document  String?

  password  String
  role      Role       @default(ASESOR)
  status    UserStatus @default(ACTIVE)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  comments  Comment[]
  customers Customer[]
}

model State {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  customers Customer[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Customer {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  birthdate     DateTime
  phone         String
  address       String
  city          String
  department    String
  document      String
  deliveryState DeliveryState?
  deliveryDate  DateTime?     
  plateNumber   String?

  advisorId Int?
  advisor   User?   @relation(fields: [advisorId], references: [id])

  stateId   Int?
  state     State?  @relation(fields: [stateId], references: [id])

  comments  Comment[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Comment {
  id          Int      @id @default(autoincrement())
  description String
  date        DateTime @default(now())

  customerId  Int
  customer    Customer @relation(fields: [customerId], references: [id])

  createdById Int
  createdBy   User     @relation(fields: [createdById], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN
  ASESOR
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum DeliveryState {
  ENTREGADO
  PENDIENTE_ENTREGA
}
